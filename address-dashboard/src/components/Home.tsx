import React, { useEffect, useState } from "react";
import data from "./style.json";

import styles from "./Home.module.css";
import WalletConnect from "walletconnect";
import { Grid, Button, Container } from "@mui/material";
import { connect } from "http2";
import { fetchTransactionData } from "../api/covalantApi";


//import Flow, { FlowProps, initialNodeProps } from './components/flow';
//import { constructParentNode, wrapNodeProps } from './components/helper';

const testAddress = "0xd8791b6abdb7c5d564018ebb93ad8a092b1d8abd";
const layout = { name: "random" };
const elements = [
  { data: { id: "one", label: "Node 1" }, position: { x: 0, y: 0 } },
  { data: { id: "two", label: "Node 2" }, position: { x: 100, y: 0 } },
  { data: { source: "one", target: "two", label: "Edge from Node1 to Node2" } },
];
function truncate(str: String) {
  return str.substring(0, 6) + "..." + str.substring(36, 42);
}

const Home = (props: any) => {
  const [isConnected, setConnection] = useState(false);
  const [isModalOpen, setIsModalOpen] = useState(false);
  const [userAddress, setUserAddress] = useState("");

  const connectOnClick = () => {
    //  Create WalletConnect SDK instance
    const wc = new WalletConnect();
    fetchTransactionData(testAddress)
      .then((data) => {})
      .catch((err) => {});
    //  Connect session (triggers QR Code modal)
    wc.connect()
      .then((data) => {
        console.log(data);
        const userAddress = data.accounts[0];
        setConnection(true);
        setUserAddress(userAddress);
        fetchTransactionData(userAddress);
      })
      .catch((err) => {
        console.log(err);
      });
  };
  const disconnectOnClick = () => {
    const wc = new WalletConnect();
    //  Create WalletConnect SDK instance
    wc.connect()
      .then((data) => {
        data.killSession();
      })
      .catch((err) => {
        console.log(err);
      });
    setConnection(false);
    setUserAddress("");
  };
  return (
    <div >
      {/* <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head> */}
      <Container>
        <Grid container spacing={2}>
          <Grid item xs={3}>
            {" "}
          </Grid>
          <Grid item xs={8}>
            <Container style={{}}></Container>
          </Grid>

          <Grid item xs={3}>
            {" "}
          </Grid>

          <Grid item xs={11}></Grid>
          <Grid item xs={1}>
            {!isConnected && (
              <Button variant="contained" onClick={connectOnClick}>
                {" "}
                Connect{" "}
              </Button>
            )}
            {isConnected && (
              <Button variant="contained" onClick={disconnectOnClick}>
                {" "}
                Disconnect {truncate(userAddress)}{" "}
              </Button>
            )}
          </Grid>

          {!isConnected && (
            <Container>
              {" "}
              please connect wallet to generate affiliation network{" "}
            </Container>
          )}
        </Grid>
      </Container>
        {isConnected && (
          <React.StrictMode>
          
          </React.StrictMode>
        )}
    </div>
  );
};

export default Home;
